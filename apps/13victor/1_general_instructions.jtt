app.isStandaloneApp = false;
app.waitForAll = false;
app.stageWaitToStart = true;
app.stageWaitToEnd = true;
app.numGroups = 1;
app.ei = 100*(app.session.e1/2 + app.session.e2/2)
app.modifyPathsToIncludeId = false;

let instructions = app.newStage('general_instructions');
instructions.activeScreen = `
<div style="max-width: 700px">
<h4>General Instructions</h4>
<p>Welcome to this experiment! Please remain silent during the experiment and
do not speak to other participants. If you have a question or need
assistance of any kind, please raise your hand and a member of our staff
will come to you.</p>

<p>In the experiment, you will be asked to make a series of decisions. If you
follow the instructions carefully, you can earn a considerable amount of
money, which will be paid to you in cash at the end of the experiment.</p>

<p>The experiment will consist of two parts, called Part A and Part B, three
additional tasks and a short questionnaire. We will concentrate on one part
or task at a time and explain the next part or task only after the previous
part or task has been completed.</p>

<p>During the experiment we will speak in terms of experimental tokens instead
of euros. Your earnings will be calculated in terms of tokens and then
translated into euros at the end of the experiment. During the experiment,
we will indicate how tokens earned in a part or task will be converted into
euros at the end of the experiment.</p>
<div style="display: flex; width: 100%">
    <span style="flex: 1 1 auto"></span>
    <button style="flex: 0 0 auto">Continue</button>
</div>
</div>
`
app.exXAmount = 'unknown'
app.exYAmount = 'unknown'
app.fig1Src = 'unknown'
switch (app.session.color) {
  case 'magenta':
    app.exXAmount = 63.7
    app.exYAmount = 12.2
    app.fig1Src = 'Individualt1.png'
    break;
  case 'cyan':
    app.exXAmount = 20.6
    app.exYAmount = 36.9
    app.fig1Src = 'Individualt2.png'
    break;
  case 'yellow':
    app.exXAmount = 20.6
    app.exYAmount = 36.9
    app.fig1Src = 'Individualt5.png'
    break;
}

let decProblem = app.newStage('decision_problem');
decProblem.activeScreen = `
<style>
body {
    max-width: unset;
}
</style>
<div style="display: flex;">
     <div style="flex: 1 1 100px; max-width: 700px;">
<h4>A decision problem: token allocation</h4>
<p>This section describes the basic decision making problem (which is called <b>token allocation</b>)
and the decision screen that you will use to make your decisions in several rounds.
</p>
<p>In each decision round, you will be asked to allocate tokens between two
accounts, labeled X and Y. The X account corresponds to the <i>x</i>-axis (the
horizontal axis) and the Y account corresponds to the <i>y</i>-axis (the vertical
axis) on a two-dimensional graph. Each choice will involve choosing a point
on a line representing possible token allocations.
</p>
<p>In each choice, you may choose any X and Y pair that is on the line. For
example, as illustrated in Figure 1, the selected choice represents a
decision to allocate {{ app.exXAmount }} tokens to the X account and {{ app.exYAmount }} tokens to the
Y account. You may also choose to allocate all tokens to either the X or the
Y account. (Note that the allocation shown in Figure 1 was selected randomly
and does not represent a <q>good</q> or <q>bad</q>> decision.)
</p>
<p>Each decision round will start by having the computer select such a line
randomly from the set of lines that intersect with at least one of the axes
at <i>A</i>/2 or more tokens but with no intercept exceeding <i>A</i> tokens. (For
instance, <i>A</i> could have the value of {{ app.ei }}, implying that each randomly
selected line intersects with at least one of the axes at {{ app.ei/2 }} or more
tokens but intersects with none of the axes at more than {{ app.ei }}, tokens.)
</p>
<p>The number <i>A</i> can be interpreted as the maximal number of tokens that you
may have available to allocate to an account in any of the decision rounds.
Hence, the larger is <i>A</i>, the larger the maximal number of tokens that you
may be able to allocate to an account.
</p>
<p>When the experiment starts, you will be informed about the value of <i>A</i> that
applies to you.
</p>
<p>
To choose a token allocation, use the mouse to move the pointer on the
computer screen along the line to the allocation that you wish to choose.
The computer will only allow you to choose combinations of X and Y that are
on the line. When you are ready to make your decision, left-click to enter
your chosen allocation. After that, confirm your decision by clicking on the
Yes button. If you want to revise your decision, click on the No button.
Once you have confirmed your decision, it cannot be revised anymore and the
next decision round will start automatically.
</p>
    </div>
    <div style="flex: 0 0 1px; background-color: #CCC; margin: 0px 25px;"></div>
    <div style="flex: 1 1 100px; max-width: 700px;">
<p style="display: flex; flex-direction: column; align-items: center">
<img style='width: 700px;' :src="'/13victor/' + app.fig1Src">
<span>Figure 1</span>
</p>

<p>
Your payoff in each decision round is determined by the number of tokens you
allocated to the X account or the number of tokens you allocated to the Y
account as follows: At the end of the round, the computer will <b>
randomly</b> select one of the accounts, X or Y. Account X will be selected
with a 1 out of {{ 1 / app.session.probSelX }} chance and account Y will be selected 
with a 1 out of {{ 1 / (1 - app.session.probSelX) }}. <b>You will only receive the number of tokens you
allocated to the account that was selected. The tokens you allocated to the
other account will be lost.</b> 
</p>

<p>This process will be repeated until all rounds are completed.</p>
<div style="display: flex; width: 100%">
    <span style="flex: 1 1 auto"></span>
    <button style="flex: 0 0 auto">Continue</button>
</div>
    </div>
</div>
`