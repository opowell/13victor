let treatments = [
    {
        name: 'Custom',
        fieldValues: {},
    },
    {
        name: 'T1',
        fieldValues: {
            divisionType: 'EXOG',
            e1: 1,
            e2: 1,
            m: 1,
            d1: 1,
          d2: 1,
            chartMax: 100,
        },
    },
    {
        name: 'T2',
        fieldValues: {
            divisionType: 'EXOG',
            e1: 1,
            e2: 1,
            m: 2,
            d1: 0.5,
            d2: 0.5,
            chartMax: 200,
        },
    },
    {
        name: 'T3',
        fieldValues: {
            divisionType: 'EXOG',
            e1: 1.3,
            e2: 0.7,
            m: 2,
            d1: 0.5,
          d2: 0.5,
          chartMax: 200,
        },
    },
    {
        name: 'T4',
        fieldValues: {
            divisionType: 'EXOG',
            e1: 1.3,
            e2: 0.7,
            m: 2,
            d1: 0.65,
            d2: 0.35,
            chartMax: 200,
        },
    },
    {
        name: 'T5',
        fieldValues: {
            divisionType: 'ENDO',
            e1: 1,
            e2: 1,
          m: 2,
          chartMax: 200,
        },
    },
    {
        name: 'T6',
        fieldValues: {
            divisionType: 'ENDO',
            e1: 1.3,
            e2: 0.7,
          m: 2,
          chartMax: 200,
        },
    },
]

let treatmentNames = [];
for (let i in treatments) {
    let name = treatments[i].name;
    for (let j in treatments[i].fieldValues) {
        name += ', ' + j + '=' + treatments[i].fieldValues[j];
    }
    treatments[i].fullName = name;
    treatmentNames.push(name);
}

session.addSelectOption('treatment', treatmentNames, 'The treatment determines proposal type, e1, e2, m, d1 and d2.');

session.addSelectOption('divisionType', ['EXOG', 'ENDO'], 'The type of division.');
session.addNumberOption('e1', 1, 0, 10, 0.01, 'Player 1 individual budget set multiplier.');
session.addNumberOption('e2', 1, 0, 10, 0.01, 'Player 2 individual budget set multiplier.');
session.addNumberOption('m', 1, 0, 10, 0.01, 'Group budget set multiplier.');
session.addNumberOption('d1', 1, 0, 100, 0.01, 'If EXOG division, Player 1 share of the group allocation.');
session.addNumberOption('d2', 1, 0, 100, 0.01, 'If EXOG division, Player 2 share of the group allocation.');

session.addNumberOption('chartMax', 200, 0, 1000, 1, 'Chart scale.');
session.addNumberOption('probSelX', 0.5, 0, 1, 0.01, 'Probability of selecting good x for payment.');
session.addNumberOption('numPracticeRounds', 5, 0, 100, 1, 'Number of practice rounds.');
session.addNumberOption('numPaidDecisionsPerRound', 1, 0, 100, 1, 'Number of randomly paid decisions per round.');
session.addNumberOption('numRounds', 50, 0, 100, 1, 'Number of individual/pair rounds.');
session.addNumberOption('numAddRounds', 10, 0, 5000, 1, 'Number of additional rounds for out-of-sample prediction.');
session.addSelectOption('payPracticeRound', ['no', 'yes'], 'Whether or not the practice round is paid.');
session.addNumberOption('exchangeRatePracticeRound', 1, 0, 1000, 0.001, 'Exchange rate for practice round, if paid.');
session.addNumberOption('exchangeRateIndiv', 1, 0, 1000, 0.001, 'Exchange rate for individual part.');
session.addNumberOption('exchangeRatePairs', 1, 0, 1000, 0.001, 'Exchange rate for pairs part.');
session.addSelectOption('playFirst', ['individual', 'pair'], 'Which part to play first (individual or pair)');

session.addNumberOption('ravensDuration', 300, 0, 3000, 1, 'Number of seconds for solving Ravens matrices.');

session.addNumberOption('socPrefsExRatePoints', 100, 0, 5000, 1, 'This number of Points ...')
session.addNumberOption('socPrefsExRateEuros', 2, 0, 5000, 0.001, '... is equal to this number of Euros')

session.ravenMatricesPractice = {
    questionIds: [1, 2],
    answers: [8, 4],
};

session.ravenMatrices = {
    questionIds: [3, 10, 12, 15, 16, 18, 21, 22, 28, 30, 31, 34],
    answers: [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4],
}

session.participantStart = function (participant) {
  if (session.setTreatment !== true) {
    session.setTreatment = true
    for (let i in treatments) {
      let tr = treatments[i];
      if (tr.name === 'Custom') {
          continue;
      }
      if (session.treatment.startsWith(tr.name)) {
        for (let j in tr.fieldValues) {
          session[j] = tr.fieldValues[j];
        }
        break;
      }
    }
  }
}

function addPairApps() {
  session.addApp('counting.jtt', {
      treatment: 'pair',
      text: 'training',
      numRegularBudgets: session.numPracticeRounds,
      numAddBudgets: 0,
      numPaidDecisions: session.payPracticeRound === 'yes' ? 1 : 0,
      exRate: session.exchangeRatePracticeRound,
  });
    session.addApp('counting.jtt', {
        treatment: 'pair',
        numPaidDecisions: session.numPaidDecisionsPerRound,
        text: 'standard',
        numRegularBudgets: session.numRounds,
        numAddBudgets: session.numAddRounds,
          exRate: session.exchangeRatePairs,
    });
}

session.addApp('1_general_instructions.jtt');

if (session.playFirst === 'pair') {
    addPairApps();
}

session.addApp('counting.jtt', {
    treatment: 'individual',
    text: 'training',
    numRegularBudgets: session.numPracticeRounds,
    numAddBudgets: 0,
  numPaidDecisions: session.payPracticeRound === 'yes' ? 1 : 0,
    exRate: session.exchangeRatePracticeRound,
});
session.addApp('counting.jtt', {
    treatment: 'individual',
    numPaidDecisions: session.numPaidDecisionsPerRound,
    text: 'standard',
    numRegularBudgets: session.numRounds,
    numAddBudgets: session.numAddRounds,
  exRate: session.exchangeRateIndiv,
});

if (session.playFirst !== 'pair') {
    addPairApps();
}

session.addApp('soc_prefs_instr.jtt');
session.addApp('soc_prefs.jtt');

session.addApp('ravens.jtt', {
    imagePrefix: 'Practice',
    playType: 'practice',
    matrices: session.ravenMatricesPractice,
    questionLabel: 'Practice Question',
    showInstructions: true,
});

session.addApp('3_instructions_ravens.jtt');

session.addApp('ravens.jtt', {
    imagePrefix: 'Raven',
    playType: 'real',
    matrices: session.ravenMatrices,
    questionLabel: 'Question',
    showInstructions: false,
});

session.addApp('big5.jtt');

session.addApp('survey.jtt');

session.addApp('results.jtt');
